apiVersion: apps/v1
kind: Deployment
metadata:
  name: metersphere-kubernetes-node-controller
  namespace: {{.Values.metersphere.namespace}}
spec:
  replicas: {{.Values.modules.nodeController.replicas}}
  selector:
    matchLabels:
      app: metersphere-kubernetes-node-controller
  template:
    metadata:
      labels:
        app: metersphere-kubernetes-node-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - metersphere-kubernetes-node-controller
              topologyKey: kubernetes.io/hostname
      containers:
        - name: metersphere-kubernetes-node-controller
          image: {{.Values.modules.imagePrefix}}{{.Values.modules.nodeController.image}}:{{.Values.modules.imageTag}}
          imagePullPolicy: {{.Values.modules.imagePullPolicy}}
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 300Mi
              cpu: 0.1
          ports:
            - name: http
              containerPort: 8086
          volumeMounts:
            - mountPath: /opt/metersphere/conf
              name: opt-metersphere-config
            - mountPath: /opt/metersphere/logs
              name: metersphere-logs
      {{if ne .Values.modules.imagePullSecret "nill"}}
      imagePullSecrets:
        - name: {{.Values.modules.imagePullSecret}}
      {{ end }}
      volumes:
        - configMap:
            defaultMode: 420
            name: metersphere-config
            items:
            - key: metersphere.properties
              path: metersphere.properties
          name: opt-metersphere-config
        - name: metersphere-logs
          {{if eq .Values.storage.accessModes "ReadWriteMany"}}
          persistentVolumeClaim:
            claimName: metersphere-logs-pvc
          {{ else }}
          emptyDir: {}
          {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: metersphere-kubernetes-node-controller
  namespace: {{.Values.metersphere.namespace}}
  labels:
    app: metersphere-kubernetes-node-controller
spec:
  sessionAffinity: ClientIP
  selector:
    app: metersphere-kubernetes-node-controller
  ports:
    - name: http
      port: 8086
      protocol: TCP