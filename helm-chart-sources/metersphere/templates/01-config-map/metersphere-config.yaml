apiVersion: v1
kind: ConfigMap
metadata:
  name: metersphere-config
  namespace: {{.Values.metersphere.namespace}}
data:
  metersphere.properties: |
    # PROPERTIES FOR METERSPHERE SERVER
    ## DATABASE
    spring.datasource.url=jdbc:mysql://{{.Values.mysql.host}}:{{.Values.mysql.port}}/metersphere?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    spring.datasource.username={{.Values.mysql.userName}}
    spring.datasource.password={{.Values.mysql.pwd}}

    ## KAFKA
    kafka.partitions=1
    kafka.replicas=1
    kafka.topic={{.Values.kafka.topic}}
    kafka.bootstrap-servers={{.Values.kafka.host}}:{{.Values.kafka.port}}
    kafka.log.topic={{.Values.kafka.logTopic}}

    # PROPERTIES FOR METERSPHERE NODE CONTROLLER
    ## JMETER
    jmeter.image={{.Values.modules.imagePrefix}}{{.Values.modules.jmeter.image}}:{{.Values.modules.jmeter.imageTag}}
  data-streaming.properties: |
    ## DATABASE
    spring.datasource.url=jdbc:mysql://{{.Values.mysql.host}}:{{.Values.mysql.port}}/metersphere?autoReconnect=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=convertToNull&useSSL=false
    spring.datasource.username={{.Values.mysql.userName}}
    spring.datasource.password={{.Values.mysql.pwd}}

    ## KAFKA
    kafka.partitions=1
    kafka.replicas=1
    kafka.topic={{.Values.kafka.topic}}
    kafka.bootstrap-servers={{.Values.kafka.host}}:{{.Values.kafka.port}}
    kafka.log.topic={{.Values.kafka.logTopic}}